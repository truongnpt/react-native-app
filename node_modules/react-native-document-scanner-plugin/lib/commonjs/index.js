"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ScanDocumentResponseStatus = exports.ResponseType = void 0;
var _reactNative = require("react-native");
const LINKING_ERROR = `The package 'react-native-document-scanner-plugin' doesn't seem to be linked. Make sure: \n\n` + _reactNative.Platform.select({
  ios: "- You have run 'pod install'\n",
  default: ''
}) + '- You rebuilt the app after installing the package\n' + '- You are not using Expo managed workflow\n';
const DocumentScanner = _reactNative.NativeModules.DocumentScanner ? _reactNative.NativeModules.DocumentScanner : new Proxy({}, {
  get() {
    throw new Error(LINKING_ERROR);
  }
});
var _default = {
  /**
   * Opens the camera, and starts the document scan
   */
  scanDocument() {
    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return DocumentScanner.scanDocument(options);
  }
};
exports.default = _default;
let ResponseType;
exports.ResponseType = ResponseType;
(function (ResponseType) {
  ResponseType["Base64"] = "base64";
  ResponseType["ImageFilePath"] = "imageFilePath";
})(ResponseType || (exports.ResponseType = ResponseType = {}));
let ScanDocumentResponseStatus;
exports.ScanDocumentResponseStatus = ScanDocumentResponseStatus;
(function (ScanDocumentResponseStatus) {
  ScanDocumentResponseStatus["Success"] = "success";
  ScanDocumentResponseStatus["Cancel"] = "cancel";
})(ScanDocumentResponseStatus || (exports.ScanDocumentResponseStatus = ScanDocumentResponseStatus = {}));
//# sourceMappingURL=index.js.map